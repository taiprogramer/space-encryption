/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.friendlyhacker;

import static com.friendlyhacker.Decrypter.decrypt;
import static com.friendlyhacker.Encrypter.encrypt;

import java.awt.event.ItemEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Locale;

import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import com.friendlyhacker.Decrypter.DecrypterStatus;
import com.friendlyhacker.Encrypter.EncryptionStatus;
import com.friendlyhacker.i18n.components.I18NComponents;
import com.friendlyhacker.i18n.notifications.I18NNotifications;

/**
 *
 * @author HuynhVanTai
 */
public class MainApp extends javax.swing.JFrame {

    private static final long serialVersionUID = 3909748189297971457L;
    private static File selectedFile = null;
    private static File encryptedFile = null;
    private static File decryptedFile = null;
    // list of all components -> i18n support
    private static ArrayList<JComponent> components = new ArrayList<>();

    /**
     * Creates new form MainApp
     */
    public MainApp() {
        initComponents();
        // add all components to list of components
        storeComponents();
        set_languages(new Locale("", ""));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();
        buttonGroupLanguages = new javax.swing.ButtonGroup();
        jButtonChooseFile = new javax.swing.JButton();
        jTextFieldPathFile = new javax.swing.JTextField();
        jButtonEncrypt = new javax.swing.JButton();
        jButtonDecrypt = new javax.swing.JButton();
        jLabelStatus = new javax.swing.JLabel();
        jLabelPassword = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();
        jLabelStatusLabel = new javax.swing.JLabel();
        jCheckBoxKeepOriginalFile = new javax.swing.JCheckBox();
        jCheckBoxShowPassword = new javax.swing.JCheckBox();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemChooseFile = new javax.swing.JMenuItem();
        jMenuLanguage = new javax.swing.JMenu();
        jRadioButtonMenuItemVietnamese = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemEnglish = new javax.swing.JRadioButtonMenuItem();
        jMenuAbout = new javax.swing.JMenu();

        jFileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Space Encryption");
        setPreferredSize(new java.awt.Dimension(600, 375));
        setResizable(false);
        setSize(new java.awt.Dimension(600, 375));

        jButtonChooseFile.setText("Choose File");
        jButtonChooseFile.setName("jButtonChooseFile"); // NOI18N
        jButtonChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChooseFileActionPerformed(evt);
            }
        });

        jTextFieldPathFile.setEditable(false);

        jButtonEncrypt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonEncrypt.setText("Encrypt");
        jButtonEncrypt.setName("jButtonEncrypt"); // NOI18N
        jButtonEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEncryptActionPerformed(evt);
            }
        });

        jButtonDecrypt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonDecrypt.setText("Decrypt");
        jButtonDecrypt.setName("jButtonDecrypt"); // NOI18N
        jButtonDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecryptActionPerformed(evt);
            }
        });

        jLabelStatus.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabelPassword.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelPassword.setText("Password:");
        jLabelPassword.setName("jLabelPassword"); // NOI18N

        jPasswordField.setText("RepublicofVietNam");

        jLabelStatusLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabelStatusLabel.setText("Status:");
        jLabelStatusLabel.setName("jLabelStatusLabel"); // NOI18N

        jCheckBoxKeepOriginalFile.setText("Keep original file");
        jCheckBoxKeepOriginalFile.setName("jCheckBoxKeepOriginalFile"); // NOI18N

        jCheckBoxShowPassword.setText("Show password");
        jCheckBoxShowPassword.setName("jCheckBoxShowPassword"); // NOI18N
        jCheckBoxShowPassword.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxShowPasswordItemStateChanged(evt);
            }
        });

        jMenuFile.setText("File");
        jMenuFile.setName("jMenuFile"); // NOI18N

        jMenuItemChooseFile.setText("Choose file");
        jMenuItemChooseFile.setName("jMenuItemChooseFile"); // NOI18N
        jMenuItemChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemChooseFileActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemChooseFile);

        jMenuBar.add(jMenuFile);

        jMenuLanguage.setText("Language");
        jMenuLanguage.setName("jMenuLanguage"); // NOI18N

        buttonGroupLanguages.add(jRadioButtonMenuItemVietnamese);
        jRadioButtonMenuItemVietnamese.setText("Vietnamese");
        jRadioButtonMenuItemVietnamese.setName("jRadioButtonMenuItemVietnamese"); // NOI18N
        jRadioButtonMenuItemVietnamese.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonMenuItemVietnameseItemStateChanged(evt);
            }
        });
        jMenuLanguage.add(jRadioButtonMenuItemVietnamese);

        buttonGroupLanguages.add(jRadioButtonMenuItemEnglish);
        jRadioButtonMenuItemEnglish.setSelected(true);
        jRadioButtonMenuItemEnglish.setText("English");
        jRadioButtonMenuItemEnglish.setName("jRadioButtonMenuItemEnglish"); // NOI18N
        jRadioButtonMenuItemEnglish.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonMenuItemEnglishItemStateChanged(evt);
            }
        });
        jMenuLanguage.add(jRadioButtonMenuItemEnglish);

        jMenuBar.add(jMenuLanguage);

        jMenuAbout.setText("About");
        jMenuAbout.setName("jMenuAbout"); // NOI18N
        jMenuAbout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuAboutMouseClicked(evt);
            }
        });
        jMenuBar.add(jMenuAbout);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelStatusLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jTextFieldPathFile, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonChooseFile))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(211, 211, 211)
                                .addComponent(jButtonEncrypt)
                                .addGap(51, 51, 51)
                                .addComponent(jButtonDecrypt))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jLabelPassword)
                                .addGap(38, 38, 38)
                                .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jCheckBoxShowPassword)
                .addGap(31, 31, 31)
                .addComponent(jCheckBoxKeepOriginalFile)
                .addGap(142, 142, 142))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPathFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChooseFile))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxKeepOriginalFile)
                    .addComponent(jCheckBoxShowPassword))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEncrypt)
                    .addComponent(jButtonDecrypt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void storeComponents(){
        components.add(jMenuFile);
        components.add(jMenuItemChooseFile);
        components.add(jMenuLanguage);
        components.add(jRadioButtonMenuItemVietnamese);
        components.add(jRadioButtonMenuItemEnglish);
        components.add(jMenuAbout);
        components.add(jButtonChooseFile);
        components.add(jButtonEncrypt);
        components.add(jButtonDecrypt);
        components.add(jLabelPassword);
        components.add(jLabelStatusLabel);
        components.add(jCheckBoxKeepOriginalFile);
        components.add(jCheckBoxShowPassword);
    }

    private void jButtonChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChooseFileActionPerformed
        // test open file
        int result = jFileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = jFileChooser.getSelectedFile();
            jTextFieldPathFile.setText(selectedFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonChooseFileActionPerformed

    private void jButtonEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEncryptActionPerformed
        if (selectedFile == null){
            jLabelStatus.setText(I18NNotifications.pleaseSelectFileText);
            return;
        }
        jLabelStatus.setText(I18NNotifications.encryptingText);
        try {
            String encryptedFilePath = new 
                        StringBuilder(selectedFile.getParent())
                        .append(System.getProperty("file.separator"))
                        .append("sefh.")
                        .append(selectedFile.getName())
                        .toString();
            encryptedFile = new File(encryptedFilePath);
            EncryptionStatus result = encrypt(selectedFile, encryptedFile, new String(jPasswordField.getPassword()));
            if (result == EncryptionStatus.SUCCESS){
                jLabelStatus.setText(I18NNotifications.encryptSuccessText);
                // if success, keep original file option check
                if (!jCheckBoxKeepOriginalFile.isSelected()){
                    // rename encrypted file, override original file
                    // try to rename & override old file
                    boolean b = encryptedFile.renameTo(selectedFile);
                    // if rename & override failed, do it by hand
                    if (!b){
                        // delete old file (selectedFile)
                        if (selectedFile.delete()){
                            // rename encrypted file to selected file
                            encryptedFile.renameTo(selectedFile);
                        }else {
                            // handler delete failed
                            // keep everything
                        }
                    }
                }
            }else if (result == EncryptionStatus.ALREADY_ENCRYPTED){
                jLabelStatus.setText(I18NNotifications.alreadyEncryptedText);
            }
        } catch (FileNotFoundException ex) {
            jLabelStatus.setText(I18NNotifications.fileNotFoundText);
        } catch (IOException ex){
            jLabelStatus.setText(I18NNotifications.encryptFailText);
        }
    }//GEN-LAST:event_jButtonEncryptActionPerformed

    private void jButtonDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecryptActionPerformed
        if (selectedFile == null){
            jLabelStatus.setText(I18NNotifications.pleaseSelectFileText);
            return;
        }
        jLabelStatus.setText(I18NNotifications.decryptingText);
        try {
            String decryptedFilePath = new 
                        StringBuilder(selectedFile.getParent())
                        .append(System.getProperty("file.separator"))
                        .append("de.")
                        .append(selectedFile.getName())
                        .toString();
            decryptedFile = new File(decryptedFilePath);
            DecrypterStatus result = decrypt(selectedFile, decryptedFile, new String(jPasswordField.getPassword()));
            if (result == DecrypterStatus.SUCCESS){
                jLabelStatus.setText(I18NNotifications.decryptSuccessText);
                // if success, keep original file option check
                if (!jCheckBoxKeepOriginalFile.isSelected()){
                    // rename decrypted file, override original file
                    // try to rename & override old file
                    boolean b = decryptedFile.renameTo(selectedFile);
                    // if rename & override failed, do it by hand
                    if (!b){
                        // delete old file (selectedFile)
                        if (selectedFile.delete()){
                            // rename decrypted file to selected file
                            decryptedFile.renameTo(selectedFile);
                        }else {
                            // handler delete failed
                            // keep everything
                        }
                    }
                }
            }else if (result == DecrypterStatus.NOT_ENCRYPTED_FILE){
                jLabelStatus.setText(I18NNotifications.notEncryptedFileText);
            }else if (result == DecrypterStatus.WRONG_PASSWORD){
                jLabelStatus.setText(I18NNotifications.wrongPasswordText);
            }
        } catch (FileNotFoundException ex) {
            jLabelStatus.setText(I18NNotifications.fileNotFoundText);
        } catch (IOException ex){
            jLabelStatus.setText(I18NNotifications.decryptFailText);
        }
    }//GEN-LAST:event_jButtonDecryptActionPerformed

    private void jMenuAboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuAboutMouseClicked
        JOptionPane.showMessageDialog(null,
                I18NNotifications.aboutAppText
        );
    }//GEN-LAST:event_jMenuAboutMouseClicked

    private void jMenuItemChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemChooseFileActionPerformed
        jButtonChooseFileActionPerformed(evt);
    }//GEN-LAST:event_jMenuItemChooseFileActionPerformed

    private void jRadioButtonMenuItemVietnameseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemVietnameseItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            set_languages(new Locale("vn", "VN"));
        }
    }//GEN-LAST:event_jRadioButtonMenuItemVietnameseItemStateChanged

    private void jRadioButtonMenuItemEnglishItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemEnglishItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            set_languages(new Locale("", ""));
        }
    }//GEN-LAST:event_jRadioButtonMenuItemEnglishItemStateChanged

    private void jCheckBoxShowPasswordItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxShowPasswordItemStateChanged
         if (evt.getStateChange() == ItemEvent.SELECTED) {
            jPasswordField.setEchoChar((char) 0);
        } else {
            jPasswordField.setEchoChar('*');
        }
    }//GEN-LAST:event_jCheckBoxShowPasswordItemStateChanged

    /* taiprogramer's util functions */
    private void set_languages(Locale locale) {
        I18NComponents.setLanguage(locale, components);
        I18NNotifications.setLanguage(locale);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupLanguages;
    private javax.swing.JButton jButtonChooseFile;
    private javax.swing.JButton jButtonDecrypt;
    private javax.swing.JButton jButtonEncrypt;
    private javax.swing.JCheckBox jCheckBoxKeepOriginalFile;
    private javax.swing.JCheckBox jCheckBoxShowPassword;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JLabel jLabelStatusLabel;
    private javax.swing.JMenu jMenuAbout;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItemChooseFile;
    private javax.swing.JMenu jMenuLanguage;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemEnglish;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemVietnamese;
    private javax.swing.JTextField jTextFieldPathFile;
    // End of variables declaration//GEN-END:variables
}
